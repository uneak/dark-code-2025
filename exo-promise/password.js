// Exercice : VÃ©rificateur de mot de passe ðŸ”’
// CrÃ©e une fonction verifierMotDePasse(password) qui simule la vÃ©rification d'un mot de passe sur un serveur.
// RÃ¨gles :
// La vÃ©rification prend 1,5 secondes
// Si le mot de passe fait moins de 6 caractÃ¨res, la Promise est rejetÃ©e
// Sinon, la Promise est rÃ©solue avec un message de succÃ¨s

// Teste ta fonction avec diffÃ©rents mots de passe (courts et longs) en utilisant .then() et .catch().



const verifierMotDePasse = password => {
    return new Promise((resolve, reject) => {

        setTimeout(() => {

            const errorList = [];

            if (password.length < 6) {
                errorList.push("Le mot de passe doit contenir au moins 6 caractÃ¨res");
                // reject("Le mot de passe doit contenir au moins 6 caractÃ¨res");
            } else {
                resolve("Le mot de passe est valide");
            }

            if (password !== "marcbest") {
                // reject("c'est pas marc");
                errorList.push("c'est pas marc");
            } else {
                resolve("c'est marc");
            }

            if (errorList.length > 0) {
                reject(errorList);
            }

        }, 1500);
    });
}

verifierMotDePasse("monmotdepasse")
    .then(message => console.log(message))
    .catch(errorList => console.log(errorList));

verifierMotDePasse("mon")
    .then(message => console.log(message))
    .catch(errorList => console.log(errorList));

verifierMotDePasse("123456")
    .then(message => console.log(message))
    .catch(errorList => console.log(errorList));

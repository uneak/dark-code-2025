function preparerPizza(type) {

    return new Promise((resolve, reject) => {
        setTimeout(() => {
            if (type === "hawa√Øenne") {
                reject("Le chef refuse de faire une pizza hawa√Øenne!");
            } else {
                resolve(`Ta pizza ${type} est pr√™te !`);
            }
        }, 2000);
    });

}


// Teste ta fonction ici :
preparerPizza("margherita")
    .then(message => console.log(message))
    .catch(erreur => console.log("Erreur:", erreur));

preparerPizza("hawa√Øenne")
    .then(message => console.log(message))
    .catch(erreur => console.log("Erreur:", erreur));


// Exercice : V√©rificateur de mot de passe üîí
// Cr√©e une fonction verifierMotDePasse(password) qui simule la v√©rification d'un mot de passe sur un serveur.
// R√®gles :

// La v√©rification prend 1,5 secondes
// Si le mot de passe fait moins de 6 caract√®res, la Promise est rejet√©e
// Sinon, la Promise est r√©solue avec un message de succ√®s

// Teste ta fonction avec diff√©rents mots de passe (courts et longs) en utilisant .then() et .catch().